var e=async({schedule:e},{services:t,database:a,getSchema:r,env:s,logger:i})=>{const{ItemsService:n}=t,o=await r(),c=new Headers,d=`${s.SHISHI_CATALOG_URL}/api/v1/resellers`,l=s.SHISHI_CATALOG_API_USER,u=s.SHISHI_CATALOG_API_PASSWORD;c.set("Authorization","Basic "+btoa(l+":"+u)),c.set("Content-Type","application/json");const g=new n("resellers",{schema:o,database:a}),h=await fetch(d,{headers:c,method:"GET"}),w=await h.json();e("30 0,3,6,9,12,15,18,21 * * 1-7",(async()=>{for(const e of w)try{const t=await g.readByQuery({filter:{buum_uid:{_eq:e.buum_uid}},limit:1});if(e){const{slug:a,...r}=e;t.length>0?(r.date_updated=(new Date).toISOString(),i.info(`Updating client: ${a}`),await g.updateOne(a,r)):(i.info(`Creating client: ${a}`),await g.createOne({slug:a,...r}))}}catch(t){i.error(`Error processing reseller: ${e}`),i.error(t)}})),e("0 0,3,6,9,12,15,18,21 * * 1-7",(async()=>{const e=await g.readByQuery({limit:-1,filter:{status:"published"}});for(const t of e)try{const e=await fetch(`${d}/${t.buum_uid}`,{headers:c,method:"GET"});await e.json()||(console.warn(`Archiving: ${t.slug}`),t.status="draft",t.date_updated=(new Date).toISOString(),await g.updateOne(t.slug,t))}catch(e){i.error(`Error processing reseller: ${t}`),i.error(e)}}))};export{e as default};
